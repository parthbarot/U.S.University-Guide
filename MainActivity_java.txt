package university_guide.com.university_guide;

import android.app.FragmentTransaction;
import android.support.design.widget.TabLayout;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.ListFragment;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import android.widget.TextView;


public class MainActivity extends AppCompatActivity implements android.app.ActionBar.TabListener{

    /**
     * The {@link android.support.v4.view.PagerAdapter} that will provide
     * fragments for each of the sections. We use a
     * {@link FragmentPagerAdapter} derivative, which will keep every
     * loaded fragment in memory. If this becomes too memory intensive, it
     * may be best to switch to a
     * {@link android.support.v4.app.FragmentStatePagerAdapter}.
     */
    private SectionsPagerAdapter mSectionsPagerAdapter;

    /**
     * The {@link ViewPager} that will host the section contents.
     */
    private ViewPager mViewPager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
       // setSupportActionBar(toolbar);
        // Create the adapter that will return a fragment for each of the three
        // primary sections of the activity.
        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());

        // Set up the ViewPager with the sections adapter.
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mSectionsPagerAdapter);

        TabLayout tabLayout = (TabLayout) findViewById(R.id.tabs);
        tabLayout.setupWithViewPager(mViewPager);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onTabSelected(android.app.ActionBar.Tab tab, FragmentTransaction ft) {
        //first tab show
        if (tab.getPosition()==0){
            tab1 t1 = new tab1();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t1).commit();
        }
        else if (tab.getPosition()==1){
            tab2 t2 = new tab2();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t2).commit();
        }
        else if (tab.getPosition()==2){
            tab3 t3 = new tab3();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t3).commit();
        }
        else if (tab.getPosition()==3){
            tab4 t4 = new tab4();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t4).commit();
        }
        else if (tab.getPosition()==4){
            tab5 t5 = new tab5();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t5).commit();
        }
        else if (tab.getPosition()==5){
            tab6 t6 = new tab6();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t6).commit();
        }
        else if (tab.getPosition()==6){
            tab7 t7 = new tab7();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t7).commit();
        }
        else if (tab.getPosition()==7){
            tab8 t8 = new tab8();
            getSupportFragmentManager().beginTransaction().replace(R.id.container,t8).commit();
        }
    }

    @Override
    public void onTabUnselected(android.app.ActionBar.Tab tab, FragmentTransaction ft) {

    }

    @Override
    public void onTabReselected(android.app.ActionBar.Tab tab, FragmentTransaction ft) {

    }

    //deleted page holder class from here
    /**
     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
     * one of the sections/tabs/pages.
     */
    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
       //returning current tabs
            switch (position){
                case 0:
                    tab1 tab1 = new tab1();
                    return tab1;
                case 1:
                    tab2 tab2 = new tab2();
                    return tab2;
                case 2:
                    tab3 tab3 = new tab3();
                return tab3;
                case 3:
                    tab4 tab4 = new tab4();
                    return tab4;
                case 4:
                    tab5 tab5 = new tab5();
                    return tab5;
                case 5:
                    tab6 tab6 = new tab6();
                    return tab6;
                case 6:
                    tab7 tab7 = new tab7();
                    return tab7;
                case 7:
                    tab8 tab8 = new tab8();
                    return tab8;

                default:
                    return null;
            }

        }

        @Override
        public int getCount() {
            // Show 4 total pages.
            return 8;
        }

        @Override
        public CharSequence getPageTitle(int position) {
            switch (position) {
                case 0:
                    return "GRE>333";
                case 1:
                    return "325<GRE<333";
                case 2:
                    return "320<GRE<=325";
                case 3:
                    return "314<GRE<=320";
                case 4:
                    return "308<GRE<=314";
                case 5:
                    return "300<GRE<=308";
                case 6:
                    return "290<GRE<=300";
                case 7:
                    return "GRE<290";


            }
            return null;
        }
    }
}
